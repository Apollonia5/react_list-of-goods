{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","resetReordering","setState","this","reorderedGoods","goods","visibleGoods","sort","product1","product2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","map","product","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,gBAAkB,WAChB,EAAKC,SAAS,CACZH,SAAUL,EAASM,KACnBF,YAAY,KATlB,4CAaE,WAAU,IAAD,OACP,EAAiCK,KAAKN,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdK,EA9CH,SACLC,EADK,GAGJ,IADCN,EACF,EADEA,SAAUD,EACZ,EADYA,WAENQ,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAUC,GAC3B,OAAQV,GACN,KAAKL,EAASgB,SACZ,OAAOF,EAASG,cAAcF,GAEhC,KAAKf,EAASkB,OACZ,OAAOJ,EAASK,OAASJ,EAASI,OAEpC,QACE,OAAO,MAITf,GACFQ,EAAaQ,UAGRR,EAuBkBS,CAAkBpB,EAAiBQ,KAAKN,OAE/D,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYnB,IAAaL,EAASgB,WAEtCS,QAAS,kBACP,EAAKjB,SAAS,CAAEH,SAAUL,EAASgB,YARvC,iCAcA,wBACEO,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYnB,IAAaL,EAASkB,SAEtCO,QAAS,kBACP,EAAKjB,SAAS,CAAEH,SAAUL,EAASkB,UARvC,4BAcA,wBACEK,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAapB,IAEjBqB,QAAS,kBACP,EAAKjB,SAAS,CAAEJ,YAAaA,KARjC,qBAcEC,IAAaL,EAASM,MAAQF,EAE5B,wBACEmB,KAAK,SACLD,UAAU,4BACVG,QAAShB,KAAKF,gBAHhB,mBAQA,QAGN,6BACGG,EAAegB,KAAI,SAAAC,GAAO,OACzB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,eA7EpC,GAAyBC,aCzDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.920e2194.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((product1, product2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return product1.localeCompare(product2);\n\n      case SortType.LENGTH:\n        return product1.length - product2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  resetReordering = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const reorderedGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={() => (\n              this.setState({ sortType: SortType.ALPHABET })\n            )}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={() => (\n              this.setState({ sortType: SortType.LENGTH })\n            )}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={() => (\n              this.setState({ isReversed: !isReversed })\n            )}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed)\n            ? (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.resetReordering}\n              >\n                Reset\n              </button>\n            )\n            : null}\n        </div>\n\n        <ul>\n          {reorderedGoods.map(product => (\n            <li data-cy=\"Good\" key={product}>\n              {product}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}